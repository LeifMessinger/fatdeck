#!/bin/bash

set -e

MOUNT_LOCK="/var/run/sdcard-mount.lock"
SDCARD_DEVICE="/dev/mmcblk0"
SDCARD_PARTITION="/dev/mmcblk0p1"
RUN_VALIDATION=1	#f3 is terrible
EXTENDED_OPTIONS="nodiscard"

while [[ $# -gt 0 ]]; do
    case "$1" in
        --force) RUN_VALIDATION=0; shift ;;
        --skip-validation) RUN_VALIDATION=0; shift ;;
        --full) EXTENDED_OPTIONS="$EXTENDED_OPTIONS,discard"; shift ;;
        --quick) EXTENDED_OPTIONS="$EXTENDED_OPTIONS,nodiscard"; shift ;;
        *) echo "Unknown option $1"; exit 22;;
    esac
done

if [[ ! -e "$SDCARD_DEVICE" ]]; then
    exit 19 #ENODEV
fi

systemctl stop sdcard-mount@mmcblk0p1.service

# lock file prevents the mount service from re-mounting as it gets triggered by udev rules
on_exit() { rm -f -- "$MOUNT_LOCK"; }
trap on_exit EXIT
echo $$ > "$MOUNT_LOCK"

# Clear out the garbage bits generated by f3probe from the partition table sectors
# Otherwise parted may think we have existing partitions in a bogus state
dd if=/dev/zero of="$SDCARD_DEVICE" bs=512 count=1024

# Format as EXT4 with casefolding for proton compatibility
echo "stage=formatting"
sync
parted --script "$SDCARD_DEVICE" mklabel gpt mkpart primary 0% 100%
sync
mkfs.exfat -n SDeck "$SDCARD_PARTITION"
sync

rm "$MOUNT_LOCK"
systemctl start sdcard-mount@mmcblk0p1.service

exit 0
